model Profile {
  userId           String                @id @unique
  user             User                  @relation(fields: [userId], references: [id])
  firstName        String?
  lastName         String?
  nickname         String?
  cellPhone        String?
  room             String?
  dormitory        Dormitory?            @default(UNKNOWN)
  gender           Gender?               @default(UNKNOWN)
  studentStatus    StudentStatus?        @default(UNKNOWN)
  externalAccounts ExternalAccountLink[]
}

enum Dormitory {
  KARMAN
  TETENY
  SCH
  BAROSS
  BERCSENYI
  VASARHELYI
  EXTERNAL
  UNKNOWN
}

enum Gender {
  MALE
  FEMALE
  OTHER
  UNKNOWN
}

enum StudentStatus {
  ACTIVE
  GRADUATED
  OTHER
  UNKNOWN
}

model ExternalAccountLink {
  id          String                  @id @default(cuid())
  protocol    ExternalAccountProtocol
  accountName String
  ownerId     String
  owner       Profile                 @relation(fields: [ownerId], references: [userId])
}

enum ExternalAccountProtocol {
  X_FORMERLY_TWITTER     @map("twitter")
  SKYPE                  @map("skype")
  CALL_SIGN              @map("call_sign")
  IRC                    @map("irc")
  GTALK                  @map("gtalk")
  JABBER                 @map("jabber")
  META_FORMERLY_FACEBOOK @map("facebook")
  TELEGRAM               @map("Telegram")
  SCH_MAIL               @map("sch_mail")
  HIMZO                  @map("H√≠mzek")
  GMAIL                  @map("gmail")
  EASTER_EGG             @map("üçÜ")
}
