FROM node:20-alpine AS base

ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
ENV YARN_VERSION=4.4.1

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat

WORKDIR /app/
RUN corepack enable &&\
    corepack prepare yarn@${YARN_VERSION} &&\
    echo 'nodeLinker: node-modules' > .yarnrc.yml &&\
    mkdir backend frontend
COPY package.json yarn.lock ./

# ======================================================== #
# ======================= BUILDER ======================== #
# ======================================================== #

FROM base AS builder

COPY frontend/package.json ./frontend/
COPY backend/package.json ./backend/

RUN yarn install --immutable

COPY ./pek-client/ ./pek-client/
COPY .* *.* ./
COPY ./frontend/ ./frontend/

# Only used for vercel previews
RUN rm -f ./frontend/src/pages/api/\[\[...slug\]\].ts
RUN yarn workspace frontend run build

# ======================================================== #
# ======================== RUNNER ======================== #
# ======================================================== #

FROM base AS runner

COPY frontend/package.json ./frontend/
RUN yarn workspaces focus frontend --production

COPY --from=builder /app/frontend/.next ./.next

EXPOSE 3000
CMD ["npx", "next", "start"]